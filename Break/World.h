#pragma once
#include "image.h"
#include "Tile.h"

class World
{
private:
	//const int TEXTURE_SIZE = 32;
	////const int MAP_HEIGHT = 30; //960px - same size as game height
	////const int MAP_WIDTH = 60; //1920px
	//const float SCROLL_RATE = 10;

	//const int __ = -1;				//empty tile
	//const int W = 210;				//wall tile
	//const int D = 191;				//door tile (light sprite)
	//const int T = 299;				//obstacle tile (table)
	//const int F1 = 234;				//floor tile T
	//const int F2 = 237;				//floor tile 2
	//const int F3 = 240;				//floor tile 3
	//const int F4 = 243;				//floor tile 4
	//const int G = 178;				//goal tile
	//Tile* tiles;
	/*const int tiles[MAP_HEIGHT][MAP_WIDTH] = {
	   __, W,__,__, T,__,__,__,D,G,__,__,__,__, W,__,__, W,__,__, T,__,__,__,D,G,__,__,__,__, W,__,__, W,__,__, T,__,__,__,D,G,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,
	   __, W,__,__, T,__,__,__,D,G,__,__,__,__, W,__,__, W,__,__, T,__,__,__,D,G,__,__,__,__, W,__,__, W,__,__, T,__,__,__,D,G,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,
	   __, W,__,__, T,__,__,__,D,G,__,__,__,__, W,__,__, W,__,__, T,__,__,__,D,G,__,__,__,__, W,__,__, W,__,__, T,__,__,__,D,G,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,
		__, W,__,__, T,__,__,__,D,G,__,__,__,__, W,__,__, W,__,__, T,__,__,__,D,G,__,__,__,__, W,__,__, W,__,__, T,__,__,__,D,G,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,
		__, W,__,__, T,__,__,__,D,G,__,__,__,__, W,__,__, W,__,__, T,__,__,__,D,G,__,__,__,__, W,__,__, W,__,__, T,__,__,__,D,G,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,
		__, W,__,__, T,__,__,__,D,G,__,__,__,__, W,__,__, W,__,__, T,__,__,__,D,G,__,__,__,__, W,__,__, W,__,__, T,__,__,__,D,G,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,
		__, W,__,__, T,__,__,__,D,G,__,__,__,__, W,__,__, W,__,__, T,__,__,__,D,G,__,__,__,__, W,__,__, W,__,__, T,__,__,__,D,G,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,
		__, W,__,__, T,__,__,__,D,G,__,__,__,__, W,__,__, W,__,__, T,__,__,__,D,G,__,__,__,__, W,__,__, W,__,__, T,__,__,__,D,G,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,
		__, W,__,__, T,__,__,__,D,G,__,__,__,__, W,__,__, W,__,__, T,__,__,__,D,G,__,__,__,__, W,__,__, W,__,__, T,__,__,__,D,G,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,
		__, W,__,__, T,__,__,__,D,G,__,__,__,__, W,__,__, W,__,__, T,__,__,__,D,G,__,__,__,__, W,__,__, W,__,__, T,__,__,__,D,G,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,
		__, W,__,__, T,__,__,__,D,G,__,__,__,__, W,__,__, W,__,__, T,__,__,__,D,G,__,__,__,__, W,__,__, W,__,__, T,__,__,__,D,G,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,
		__, W,__,__, T,__,__,__,D,G,__,__,__,__, W,__,__, W,__,__, T,__,__,__,D,G,__,__,__,__, W,__,__, W,__,__, T,__,__,__,D,G,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,
		__, W,__,__, T,__,__,__,D,G,__,__,__,__, W,__,__, W,__,__, T,__,__,__,D,G,__,__,__,__, W,__,__, W,__,__, T,__,__,__,D,G,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,
		__, W,__,__, T,__,__,__,D,G,__,__,__,__, W,__,__, W,__,__, T,__,__,__,D,G,__,__,__,__, W,__,__, W,__,__, T,__,__,__,D,G,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,
		__, W,__,__, T,__,__,__,D,G,__,__,__,__, W,__,__, W,__,__, T,__,__,__,D,G,__,__,__,__, W,__,__, W,__,__, T,__,__,__,D,G,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,
		__, W,__,__, T,__,__,__,D,G,__,__,__,__, W,__,__, W,__,__, T,__,__,__,D,G,__,__,__,__, W,__,__, W,__,__, T,__,__,__,D,G,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,
		__, W,__,__, T,__,__,__,D,G,__,__,__,__, W,__,__, W,__,__, T,__,__,__,D,G,__,__,__,__, W,__,__, W,__,__, T,__,__,__,D,G,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,
		__, W,__,__, T,__,__,__,D,G,__,__,__,__, W,__,__, W,__,__, T,__,__,__,D,G,__,__,__,__, W,__,__, W,__,__, T,__,__,__,D,G,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,
		__, W,__,__, T,__,__,__,D,G,__,__,__,__, W,__,__, W,__,__, T,__,__,__,D,G,__,__,__,__, W,__,__, W,__,__, T,__,__,__,D,G,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,
		__, W,__,__, T,__,__,__,D,G,__,__,__,__, W,__,__, W,__,__, T,__,__,__,D,G,__,__,__,__, W,__,__, W,__,__, T,__,__,__,D,G,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,
		__, W,__,__, T,__,__,__,D,G,__,__,__,__, W,__,__, W,__,__, T,__,__,__,D,G,__,__,__,__, W,__,__, W,__,__, T,__,__,__,D,G,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,
		__, W,__,__, T,__,__,__,D,G,__,__,__,__, W,__,__, W,__,__, T,__,__,__,D,G,__,__,__,__, W,__,__, W,__,__, T,__,__,__,D,G,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,
		__, W,__,__, T,__,__,__,D,G,__,__,__,__, W,__,__, W,__,__, T,__,__,__,D,G,__,__,__,__, W,__,__, W,__,__, T,__,__,__,D,G,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,
		__, W,__,__, T,__,__,__,D,G,__,__,__,__, W,__,__, W,__,__, T,__,__,__,D,G,__,__,__,__, W,__,__, W,__,__, T,__,__,__,D,G,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,
		__, W,__,__, T,__,__,__,D,G,__,__,__,__, W,__,__, W,__,__, T,__,__,__,D,G,__,__,__,__, W,__,__, W,__,__, T,__,__,__,D,G,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,
		__, W,__,__, T,__,__,__,D,G,__,__,__,__, W,__,__, W,__,__, T,__,__,__,D,G,__,__,__,__, W,__,__, W,__,__, T,__,__,__,D,G,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,
		__, W,__,__, T,__,__,__,D,G,__,__,__,__, W,__,__, W,__,__, T,__,__,__,D,G,__,__,__,__, W,__,__, W,__,__, T,__,__,__,D,G,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,
		__, W,__,__, T,__,__,__,D,G,__,__,__,__, W,__,__, W,__,__, T,__,__,__,D,G,__,__,__,__, W,__,__, W,__,__, T,__,__,__,D,G,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,
		__, W,__,__, T,__,__,__,D,G,__,__,__,__, W,__,__, W,__,__, T,__,__,__,D,G,__,__,__,__, W,__,__, W,__,__, T,__,__,__,D,G,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,
		__, W,__,__, T,__,__,__,D,G,__,__,__,__, W,__,__, W,__,__, T,__,__,__,D,G,__,__,__,__, W,__,__, W,__,__, T,__,__,__,D,G,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__
	};*/


	
	Tile* tiles[GAME_WIDTH][GAME_HEIGHT];
	void generateWorld();
	Tile dirtTile;
	Tile grassTile;
	Tile floorTile;

public:
	World();
	~World();
	void draw();
	void initialize(Graphics * g);

};

